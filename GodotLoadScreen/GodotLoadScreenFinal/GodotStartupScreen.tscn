[gd_scene load_steps=10 format=2]

[ext_resource path="res://GodotLoadScreen/GodotLoadScreenFinal/FlickeringLightSound.wav" type="AudioStream" id=2]
[ext_resource path="res://GodotLoadScreen/GodotLoadScreenFinal/GodotLogoStartup.tscn" type="PackedScene" id=3]
[ext_resource path="res://GodotLoadScreen/GodotLoadScreenFinal/PressStart2P-Regular.ttf" type="DynamicFontData" id=4]
[ext_resource path="res://GodotLoadScreen/GodotLoadScreenFinal/GodotStartupScreen.gd" type="Script" id=5]

[sub_resource type="DynamicFont" id=1]
font_data = ExtResource( 4 )

[sub_resource type="DynamicFont" id=2]
font_data = ExtResource( 4 )

[sub_resource type="DynamicFont" id=3]
font_data = ExtResource( 4 )

[sub_resource type="Environment" id=4]
background_mode = 4
glow_enabled = true
glow_strength = 0.96
glow_blend_mode = 0
glow_bicubic_upscale = true

[sub_resource type="Animation" id=5]
resource_name = "Fade"
length = 0.75
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[node name="GodotStartupScreen" type="ColorRect"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0.0156863, 0.027451, 1 )
script = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="."]
modulate = Color( 1.1, 1.1, 1.2, 1 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -159.811
margin_top = -160.0
margin_right = 160.189
margin_bottom = 160.0
rect_scale = Vector2( 1.89442, 1.89442 )
rect_pivot_offset = Vector2( 160, 160 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Made" type="Label" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -67.0
margin_top = -48.0
margin_right = -3.0
margin_bottom = -32.0
custom_fonts/font = SubResource( 1 )
text = "MADE"
align = 1
valign = 1
uppercase = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="With" type="Label" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = 5.0
margin_top = -48.0
margin_right = 69.0
margin_bottom = -32.0
custom_fonts/font = SubResource( 2 )
text = "With"
align = 1
valign = 1
uppercase = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Godot" type="Label" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -39.0
margin_top = 32.0
margin_right = 41.0
margin_bottom = 48.0
custom_fonts/font = SubResource( 3 )
text = "godot"
align = 1
valign = 1
uppercase = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GodotAnimatedSprite" parent="Control" instance=ExtResource( 3 )]
modulate = Color( 1, 1, 1.3, 1 )
position = Vector2( 160, 160 )

[node name="Tween" type="Tween" parent="."]
playback_process_mode = 0

[node name="ChangeSceneTimer" type="Timer" parent="."]
process_mode = 0
wait_time = 1.3
one_shot = true

[node name="AnimationPlayTimer" type="Timer" parent="."]
process_mode = 0
wait_time = 0.4
one_shot = true
autostart = true

[node name="LightFlickerSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 4 )

[node name="SceneTransition" type="ColorRect" parent="."]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="SceneTransition"]
anims/Fade = SubResource( 5 )
[connection signal="animation_finished" from="Control/GodotAnimatedSprite" to="." method="_on_GodotAnimatedSprite_animation_finished"]
[connection signal="timeout" from="ChangeSceneTimer" to="." method="_on_ChangeSceneTimer_timeout"]
[connection signal="timeout" from="AnimationPlayTimer" to="." method="_on_AnimationPlayTimer_timeout"]
[connection signal="animation_finished" from="SceneTransition/AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
